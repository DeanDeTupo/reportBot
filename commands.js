// –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –±–æ—Ç–∞

const { mainMenu, greeting } = require('./utils/buttons');
const { checkUser, refreshData } = require('./utils/utils');

const start = async (ctx) => {
  //—É–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥ –¥–ª—è –≥—Ä—É–ø–ø–æ–≤—ã—Ö —á–∞—Ç–æ–≤
  console.log(ctx.update);

  if (ctx.update.message.chat.id < 0) return;
  //—Å–Ω–∞—á–∞–ª–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ –∏–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ
  // –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ
  // –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –±–∞–∑–µ, —Ç–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏ –ø–µ—Ä–µ–¥–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –¥–∞–ª—å—à–µ'
  // console.log(ctx.update.message);
  const userId = ctx.update.message?.from || ctx.update.callback_query.from;
  const checkData = await checkUser(userId); //–ø–µ—Ä–µ–¥–∞—ë–º ctx –∫–æ–º–∞–Ω–¥—ã /start

  // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å
  // console.log(checkData.status);
  if (!!checkData.data) {
    refreshData(checkData.data, ctx);
    // ctx.session.local_name = checkData.data.local_name;
    // ctx.session.id = checkData.data.id;
    // ctx.session.enableNotify = checkData.data.enableNotify || false;
    console.log(ctx.session);
    ctx.reply(`ü§ñ –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ—Ç—á—ë—Ç—ã`, { reply_markup: mainMenu });
  }
  if (!checkData.data) {
    ctx.reply(`–î–∞–≤–∞–π –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è`, {
      parse_mode: 'Markdown',
      reply_markup: greeting,
    });
  }
};

const backMenu = (ctx) => {
  // ctx.editMessageText(`ü§ñ –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ—Ç—á—ë—Ç—ã`, {
  ctx.editMessageText(`ü§ñ –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ—Ç—á—ë—Ç—ã!!!`, {
    disable_web_page_preview: true,
    parse_mode: 'HTML',
    reply_markup: mainMenu,
  });
};
const toStart = (ctx) => {
  // ctx.editMessageText(`ü§ñ –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ—Ç—á—ë—Ç—ã`, {
  ctx.reply(`ü§ñ –Ø –ø—Ä–∏–Ω–∏–º–∞—é –æ—Ç—á—ë—Ç—ã!!!`, {
    disable_web_page_preview: true,
    parse_mode: 'HTML',
    reply_markup: mainMenu,
  });
};

module.exports = { start, backMenu, toStart };
