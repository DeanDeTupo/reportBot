require('dotenv').config();
const { DICT } = require('./dictionary');

const dict = { '<': '&lt;', '>': '&gt;', '&': '&amp;' };
const htmlParser = (text) => {
  return text.replace(/\<|\>|\&/g, (match) => dict[match]);
};
const createReport = (text, profession, location, nameObj) => {
  const pastedText = !!text ? htmlParser(text) : '';
  return `üìç <b>${DICT[location]}</b>
üí∞ <b>${DICT[profession]}</b>: ${nameObj.second_name} ${nameObj.first_name}

${!!pastedText ? `<blockquote>${pastedText}</blockquote>` : ''}`;
};

const textLengthWarning = (text) => {
  return `<b>–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç!</b> –¢–∞–∫–æ–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–µ –±—É–¥—É
  –°–æ–∫—Ä–∞—Ç–∏ –µ–≥–æ —Ö–æ—Ç—è–±—ã –Ω–∞ <b>${
    text.length - 1024
  }</b> —Å–∏–º–≤–æ–ª–æ–≤ –∏ –æ—Ç–ø—Ä–∞–≤—å –æ—Ç—á–µ—Ç –∑–∞–Ω–æ–≤–æ`;
};

function notifyStatusMessage(status) {
  const NOTE_TIME = process.env.TIME.slice(0, 5);
  console.log(NOTE_TIME);
  return `–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è *${
    status ? '–í–ö–õ–Æ–ß–ï–ù–´' : '–í–´–ö–õ–Æ–ß–ï–ù–´'
  }*\n–ë—É–¥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å —Ç–µ–±–µ –ø—Ä–æ –æ—Ç—á–µ—Ç –≤ *${NOTE_TIME}*\n\n–ò–∑–º–µ–Ω–µ–Ω–∏—è –≤—Å—Ç—É–ø—è—Ç –≤ —Å–∏–ª—É –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ _—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏ –≤—ã–π—Ç–∏_`;
}

module.exports = { createReport, notifyStatusMessage, textLengthWarning };
